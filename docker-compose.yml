services:
  # es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
  #   container_name: es01
  #   environment:
  #     - node.name=es01
  #     - cluster.name=es-docker-cluster
  #     - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
  #     - cluster.initial_master_nodes=es01
  #     - xpack.security.enabled=false
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - instalite
  #   volumes:
  #     - /usr/share/elasticsearch/data

  # kib01:
  # image: docker.elastic.co/kibana/kibana:8.13.0
  # container_name: kib01
  # environment:
  #   - ELASTICSEARCH_HOSTS=http://es01:9200
  # ports:
  #   - 5601:5601
  # depends_on:
  #   - es01
  # networks:
  #   - instalite

  postgres:
    image: postgres:16.2
    container_name: postgres-instalite
    ports:
      - 5432:5432
    env_file:
      - path: .env
    volumes:
      - /usr/share/postgres/data
    networks:
      - instalite

  redis:
    image: redis:7.2.4
    container_name: redis-instalite
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    restart: always
    ports:
      - 6379:6379
    networks:
      - instalite
    volumes:
      - /usr/share/redis/data

  notifications:
    container_name: notifications
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: npm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    volumes:
      - .:/usr/src/app

  instalite_be:
    container_name: instalite
    build:
      context: .
      dockerfile: ./apps/instalite_be/Dockerfile
      target: development
    command: npm run start:dev instalite_be
    env_file:
      - ./apps/instalite_be/.env
    depends_on:
      - redis
    ports:
      - 8000:8000
    networks:
      - instalite
    volumes:
      - .:/usr/src/app

networks:
  instalite:
    driver: bridge
